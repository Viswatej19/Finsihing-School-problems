/*
Given a flat surface of m*n size, each position contains either empty '0', a Iron ball 'B' or Metal Block 'M' (The Metal block is an anti magnetic block), 

Your task is to find the maximum Iron Balls you can attarct by using a Magnet.

The Magnet attracts all the iron balls in the same row and column from their positions until the Metal Block,since the Metal block is an anti magnetic block.

Note: You can only put the magnet at an empty position.


Input Format:
-------------
Line-1 -> Two Integers, M and N, size of the grid
Next M Lines -> N space separated characters, allowed characters '0', 'B', 'M'


Output Format:
--------------
Print an integer, maximum Iron Balls you can attarct by using a Magnet


Sample Input-1:
---------------
3 4
0 B 0 0 
B 0 M B
0 B 0 0

Sample Output:
--------------
3 

Explanation: 
------------
For the given grid,

0 B 0 0 
B 0 M B
0 B 0 0

Placing a Magnet at (1,1) attacts 3 iron balls.
*/
import java.util.*;
class prog1{
    public static int matrix(char a[][],int m,int n,int row,int col)
    {
        int count=0;
        if(a[m][n]=='0')
        {
            
            for(int i=m;i>=0;i--)
            {
            try
            {
            if(a[i-1][n]=='M')
            break;
            if(a[i-1][n]=='B')
            {
                count++;
            }
            
            else
            continue;
            }
            catch(Exception e)
            {
                
            }
            }
            for(int i=n;i>=0;i--)
            {
            try
            {
            if(a[m][i-1]=='M')
            break;
            if(a[m][i-1]=='B')
            {
                count++;
            }
            else
            continue;
            }
            catch(Exception e)
            {
            
            }
            }
            for(int i=n;i<=col-1;i++)
            {
            try
            {
            if(a[m][i+1]=='M')
            break;
            if(a[m][i+1]=='B')
            {
                count++;
               
            }
            else
            continue;
            }
            catch(Exception e)
            {
    
            }
            }
            for(int i=m;i<=row-1;i++)
            {
            try
            {
            if(a[i+1][n]=='M')
            break;
            if(a[i+1][n]=='B')
            {
                count++;
            }
            else
            continue;
            }
            catch(Exception e)
            {
        
            }
            }
        }
        return count;
    }
    public static int mag(char a[][],int m,int n)
    {
        int max=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                int x=matrix(a,i,j,m,n);
                if(max<x)
                {
                    max=x;
                }
            }
            
        }
        return max;
    }
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        int m=sc.nextInt();
        int n=sc.nextInt();
        char a[][]=new char[m][n];
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
                a[i][j]=sc.next().charAt(0);
        System.out.println(mag(a,m,n));
    }
}
